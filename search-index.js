var searchIndex = new Map(JSON.parse('[["patina",{"t":"CCHCCCPGFFFPNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNOONNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNOOOHFFNNNNNNONNNNONNNNNNNNONNOONNNNNNOHHPGPPPIPNNNNNNNNNNNNNNNNNNNN","n":["cli","engine","main","patina","templating","utils","Apply","Command","GlobalOptions","PatinaCli","PatinaCommandOptions","Render","apply","augment_args","","","augment_args_for_update","","","augment_subcommands","augment_subcommands_for_update","borrow","","","","borrow_mut","","","","command","","command_for_update","fmt","","","","from","","","","from_arg_matches","","","","from_arg_matches_mut","","","","global_options","","group_id","","","has_subcommand","into","","","","parse_args","patina_path","render","run","try_from","","","","try_into","","","","type_id","","","","update_from_arg_matches","","","","update_from_arg_matches_mut","","","","verbose","options","","render_patina_from_file","Patina","PatinaFile","borrow","","borrow_mut","","default","","description","deserialize","","eq","","files","fmt","","from","","from_toml_file","into","","load_template_file_as_string","name","serialize","","target","template","try_from","","try_into","","type_id","","vars","render_patina","render_patina_file","Err","Error","FileRead","Ok","RenderTemplate","Result","TomlParse","as_file_read","as_file_read_mut","as_render_template","as_render_template_mut","as_toml_parse","as_toml_parse_mut","borrow","borrow_mut","fmt","from","into","into_file_read","into_render_template","into_toml_parse","is_file_read","is_render_template","is_toml_parse","try_from","try_into","type_id"],"q":[[0,"patina"],[6,"patina::cli"],[83,"patina::cli::Command"],[85,"patina::engine"],[86,"patina::patina"],[120,"patina::templating"],[122,"patina::utils"],[149,"clap_builder::builder::command"],[150,"core::fmt"],[151,"clap_builder::parser::matches::arg_matches"],[152,"clap_builder"],[153,"core::result"],[154,"clap_builder::util::id"],[155,"core::option"],[156,"core::any"],[157,"std::path"],[158,"alloc::string"],[159,"alloc::vec"],[160,"serde::de"],[161,"serde::ser"],[162,"handlebars::registry"],[163,"std::io::error"],[164,"handlebars::error"],[165,"toml::de"]],"i":"``````Ad````0l0Abd2103321302130222213021302130213020210321302022213021302130213021301D`Db```BnC`101011010110101100110001010101``Dd`Bl10`000000000000000000000","f":"``{{}b}`````````{db}{ff}0000000{h{{h{c}}}{}}000{{{h{j}}}{{h{jc}}}{}}000{{}f}`0{{{h{l}}{h{jn}}}A`}{{{h{Ab}}{h{jn}}}A`}{{{h{Ad}}{h{jn}}}A`}{{{h{d}}{h{jn}}}A`}{cc{}}000{{{h{Af}}}{{Aj{lAh}}}}{{{h{Af}}}{{Aj{AbAh}}}}{{{h{Af}}}{{Aj{AdAh}}}}{{{h{Af}}}{{Aj{dAh}}}}{{{h{jAf}}}{{Aj{lAh}}}}{{{h{jAf}}}{{Aj{AbAh}}}}{{{h{jAf}}}{{Aj{AdAh}}}}{{{h{jAf}}}{{Aj{dAh}}}}``{{}{{An{Al}}}}00{{{h{B`}}}Bb}{{}c{}}000{{}l}`{db}{lb}{c{{Aj{e}}}{}{}}000{{}{{Aj{c}}}{}}000{hBd}000{{{h{jl}}{h{Af}}}{{Aj{bAh}}}}{{{h{jAb}}{h{Af}}}{{Aj{bAh}}}}{{{h{jAd}}{h{Af}}}{{Aj{bAh}}}}{{{h{jd}}{h{Af}}}{{Aj{bAh}}}}{{{h{jl}}{h{jAf}}}{{Aj{bAh}}}}{{{h{jAb}}{h{jAf}}}{{Aj{bAh}}}}{{{h{jAd}}{h{jAf}}}{{Aj{bAh}}}}{{{h{jd}}{h{jAf}}}{{Aj{bAh}}}}```{Bf{{Aj{{Bj{Bh}}Bl}}}}``{h{{h{c}}}{}}0{{{h{j}}}{{h{jc}}}{}}0{{}Bn}{{}C`}`{c{{Aj{Bn}}}Cb}{c{{Aj{C`}}}Cb}{{{h{Bn}}{h{Bn}}}Bb}{{{h{C`}}{h{C`}}}Bb}`{{{h{Bn}}{h{jn}}}A`}{{{h{C`}}{h{jn}}}A`}{cc{}}0{{{h{Bf}}}{{Aj{BnBl}}}}{{}c{}}0{{{h{C`}}}{{Aj{BhBl}}}}`{{{h{Bn}}c}AjCd}{{{h{C`}}c}AjCd}``{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{hBd}0`{{{h{Bn}}}{{Aj{{Bj{Bh}}Bl}}}}{{{h{Cf}}{h{Bn}}{h{C`}}}{{Aj{BhBl}}}}```````{{{h{Bl}}}{{An{{Cj{{h{Bf}}{h{Ch}}}}}}}}{{{h{jBl}}}{{An{{Cj{{h{jBf}}{h{jCh}}}}}}}}{{{h{Bl}}}{{An{{h{Cl}}}}}}{{{h{jBl}}}{{An{{h{jCl}}}}}}{{{h{Bl}}}{{An{{h{Cn}}}}}}{{{h{jBl}}}{{An{{h{jCn}}}}}}{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{{{h{Bl}}{h{jn}}}A`}{cc{}}{{}c{}}{Bl{{Aj{{Cj{BfCh}}Bl}}}}{Bl{{Aj{ClBl}}}}{Bl{{Aj{CnBl}}}}{{{h{Bl}}}Bb}00{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{hBd}","D":"Gl","p":[[1,"unit"],[5,"PatinaCommandOptions",6],[5,"Command",149],[1,"reference",null,null,1],[0,"mut"],[5,"PatinaCli",6],[5,"Formatter",150],[8,"Result",150],[5,"GlobalOptions",6],[6,"Command",6],[5,"ArgMatches",151],[8,"Error",152],[6,"Result",153,null,1],[5,"Id",154],[6,"Option",155,null,1],[1,"str"],[1,"bool"],[5,"TypeId",156],[5,"PathBuf",157],[5,"String",158],[5,"Vec",159],[6,"Error",122],[5,"Patina",86],[5,"PatinaFile",86],[10,"Deserializer",160],[10,"Serializer",161],[5,"Registry",162],[5,"Error",163],[1,"tuple",null,null,1],[5,"RenderError",164],[5,"Error",165],[15,"Render",83],[15,"Apply",83],[8,"Result",122]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFcAEAABAAEABAACAA0AEQAgAAQAKQAHADMAAwA9AAAAPwATAFkABQBgAAMAZQABAG4AAQByAAUAegAAAIgAAgCTAAIA","P":[[21,"T"],[29,""],[36,"T"],[40,""],[54,"U"],[58,""],[62,"U,T"],[66,"U"],[70,""],[88,"T"],[92,""],[95,"__D"],[97,""],[102,"T"],[104,""],[105,"U"],[107,""],[109,"__S"],[113,"U,T"],[115,"U"],[117,""],[135,"T"],[137,""],[138,"T"],[139,"U"],[140,""],[146,"U,T"],[147,"U"],[148,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[4804]}